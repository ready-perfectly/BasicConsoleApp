# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

# Notes on GitHub Actions
# The default shell on Windows is pwsh.exe (see: https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#defaultsrunshell)

name: Build Basic Console App (.NET)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      DEBUG_WORKFLOW:
        description: 'Flag to display more information if debugging workflow'
        required: false
        type: boolean
        default: false
      VERSION_MAJOR:
        description: 'Version (major)'
        required: false
        type: number
        default: 1
      VERSION_MINOR:
        description: 'Version (minor)'
        required: false
        type: number
        default: 0
      VERSION_BUILD:
        description: 'Version (build)'
        required: false
        type: number
        default: 0
      BUILD_CONFIGURATION:
        description: "Build configuration"
        required: false
        type: string
        default: "Release"
        
env:
  MY_BUILD_VERSION: "${{ inputs.VERSION_MAJOR || vars.BUILD_VERSION_MAJOR }}.${{ inputs.VERSION_MINOR || vars.BUILD_VERSION_MINOR }}.${{ inputs.VERSION_BUILD || github.run_number }}.${{ github.run_attempt }}"
  BUILD_CONFIGURATION: "${{ inputs.BUILD_CONFIGURATION || 'Release' }}"
  DEBUG_WORKFLOW: "${{ inputs.DEBUG_WORKFLOW || false }}"
  
jobs:
  "build":
    runs-on: [self-hosted, Windows, minikube]
    
    defaults:
      run:
        shell: cmd
        working-directory: ${{ github.workspace }}

    steps:
    - name: Print job environment variables
      run: |
        echo MY_BUILD_VERSION     : ${{ env.MY_BUILD_VERSION }}
        echo BUILD_CONFIGURATION  : ${{ env.BUILD_CONFIGURATION }}
        echo DEBUG_WORKFLOW       : ${{ env.DEBUG_WORKFLOW }}
        
    - name: Print debug information 
      if: env.DEBUG_WORKFLOW == true
      run: |
        echo GITHUB_EVENT_NAME      : ${{ github.event_name }}
        echo SAMPLE_ORG_VARIABLE1   : ${{ vars.SAMPLE_ORG_VARIABLE1 }}
        echo SAMPLE_REPO_VARIABLE1  : ${{ vars.SAMPLE_REPO_VARIABLE1 }}
        echo SAMPLE_REPO_SECRET1    : ${{ vars.SAMPLE_REPO_SECRET1 }}
      
    - name: Print configuration variables
      if: env.DEBUG_WORKFLOW == true
      run: |
        echo SAMPLE_ORG_VARIABLE1   : ${{ vars.SAMPLE_ORG_VARIABLE1 }}
        echo SAMPLE_REPO_VARIABLE1  : ${{ vars.SAMPLE_REPO_VARIABLE1 }}
        echo SAMPLE_REPO_SECRET1    : ${{ secrets.SAMPLE_REPO_SECRET1 }}
        echo SAMPLE_ORG_SECRET1     : ${{ secrets.SAMPLE_ORG_SECRET1 }}
        echo SAMPLE_ORG_SECRET2     : ${{ secrets.SAMPLE_ORG_SECRET2 }}
        
    - name: Test actions
      run: |
        echo "::warning file=appxxx.js,line=1::Missing semicolon123"
      
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Dump selected variables
      run: |
        echo "GitHub SHA: $GITHUB_SHA"
        echo "GitHub Workspace1: ${GITHUB_WORKSPACE}"
        echo "GitHub Workspace2: $GITHUB_WORKSPACE"
        echo "GitHub Workspace3: $env:GITHUB_WORKSPACE"
        echo "GitHub Workspace4: $($env:GITHUB_WORKSPACE)"
        echo "GitHub Workspace5: ${{ github.workspace }}"
        echo "GitHub Workspace6: ${{ inputs.working_directory }}"
        whoami
        
    - name: Dump environment variables
      run: set
    - name: List files
      run: dir
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
